version: '3.1'

services:
  # PostgreSQL
  db:
    image: postgres:14
    container_name: postgres
    hostname: db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=test_django
    shm_size: "1gb"
    ports:
      - "5432:5432"
    volumes:
      - ./db:/var/lib/postgresql/data
#      - ./conf/postgres/pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf
#      - ./conf/postgres/postgresql.conf:/var/lib/postgresql/data/postgresql.conf
    restart: always
    networks:
      common:
        ipv4_address: 172.20.0.100

  web:
    container_name: django
    hostname: web
    build: .
    restart: always
    entrypoint: ./entrypoint.sh
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./entrypoint.sh:/app/entrypoint.sh
    environment:
      WAIT_HOSTS: db:5432
      WAIT_SLEEP_INTERVAL: 3
      WAIT_HOSTS_TIMEOUT: 45
      WAIT_AFTER_HOSTS: 5
    depends_on:
      - db
    networks:
      common:
        ipv4_address: 172.20.0.101

#Portainer
  portainer:
    container_name: portainer
    image: portainer/portainer
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    ports:
      - "9000:9000"
    restart: always
    networks:
      common:
        ipv4_address: 172.20.0.102

volumes:
  portainer_data:

networks:
  common:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/24